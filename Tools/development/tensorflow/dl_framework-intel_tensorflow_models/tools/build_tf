#!/bin/bash

print_help() {
    echo "Usage: build_tf [OPTIONS]"
    echo "-h Print this information."
    echo "-t [VERSION] Version to be built, which could be either eigen, mkl, or mkldnn. By default, it would build eigen."
    echo "-r Resume building. By default, each building will clean the workspace first. If this option is specified, the workspace will not be cleaned."
    exit
}

# By default, it will build the eigen version
version_to_build=0

# By default, it'll build from scratch. If the option `-r` specified, it will not clean the workspace.
build_from_scratch=1

# Opt parser
while getopts ":ht:r" opt; do
    case ${opt} in
        h )
            print_help ;;
        t )
            case $OPTARG in
                eigen ) version_to_build=0 ;;
                mkl ) version_to_build=1 ;;
                mkldnn ) version_to_build=2 ;;
                : )
                    echo "Invalid version: eigen, mkl, mkldnn"
                    exit 1
                ;;
            esac
            ;;
        r ) build_from_scratch=0 ;;
        \? ) print_help ;;
    esac
done

# Clean the workspace if needed
if [ $build_from_scratch -eq 1 ]
then
    bazel clean --async
fi

# Build the TensorFlow
if [ $version_to_build -eq 0 ]
then
    echo "Eigen will be built..."
    bazel build --copt -O3 -c opt //tensorflow/tools/pip_package:build_pip_package
elif [ $version_to_build -eq 1 ]
then
    echo "MKL will be built..."
    bazel build --copt -O3 --config=mkl -c opt //tensorflow/tools/pip_package:build_pip_package
elif [ $version_to_build -eq 2 ]
then
    echo "MKLDNN will be built..."
    bazel build --copt -O3 --copt=-DINTEL_MKL_DNN --config=mkl -c opt //tensorflow/tools/pip_package:build_pip_package
else
    echo "Internal ERROR: $version_to_build. This should NOT happen at all!"
    exit 1
fi

# Check the error code
if [ $? -ne 0 ]
then
    exit $?
fi

# Remove the *.whl file generated before
rm ~/tmp/*.whl

# Generate the .whl file
./bazel-bin/tensorflow/tools/pip_package/build_pip_package ~/tmp/

# Install the .whl file, uninstalling first
pip uninstall -y tensorflow
pip install ~/tmp/*.whl
